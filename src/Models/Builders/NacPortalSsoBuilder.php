<?php

declare(strict_types=1);

/*
 * MistAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MistAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use MistAPILib\Models\NacPortalSso;

/**
 * Builder for model NacPortalSso
 *
 * @see NacPortalSso
 */
class NacPortalSsoBuilder
{
    /**
     * @var NacPortalSso
     */
    private $instance;

    private function __construct(NacPortalSso $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new nac portal sso Builder object.
     */
    public static function init(): self
    {
        return new self(new NacPortalSso());
    }

    /**
     * Sets idp cert field.
     */
    public function idpCert(?string $value): self
    {
        $this->instance->setIdpCert($value);
        return $this;
    }

    /**
     * Sets idp sign algo field.
     */
    public function idpSignAlgo(?string $value): self
    {
        $this->instance->setIdpSignAlgo($value);
        return $this;
    }

    /**
     * Sets idp sso url field.
     */
    public function idpSsoUrl(?string $value): self
    {
        $this->instance->setIdpSsoUrl($value);
        return $this;
    }

    /**
     * Sets issuer field.
     */
    public function issuer(?string $value): self
    {
        $this->instance->setIssuer($value);
        return $this;
    }

    /**
     * Sets nameid format field.
     */
    public function nameidFormat(?string $value): self
    {
        $this->instance->setNameidFormat($value);
        return $this;
    }

    /**
     * Sets sso role matching field.
     */
    public function ssoRoleMatching(?array $value): self
    {
        $this->instance->setSsoRoleMatching($value);
        return $this;
    }

    /**
     * Sets use sso role for cert field.
     */
    public function useSsoRoleForCert(?bool $value): self
    {
        $this->instance->setUseSsoRoleForCert($value);
        return $this;
    }

    /**
     * Initializes a new nac portal sso object.
     */
    public function build(): NacPortalSso
    {
        return CoreHelper::clone($this->instance);
    }
}
