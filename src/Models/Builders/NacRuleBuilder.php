<?php

declare(strict_types=1);

/*
 * MistAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MistAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use MistAPILib\Models\NacRule;
use MistAPILib\Models\NacRuleMatching;

/**
 * Builder for model NacRule
 *
 * @see NacRule
 */
class NacRuleBuilder
{
    /**
     * @var NacRule
     */
    private $instance;

    private function __construct(NacRule $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new nac rule Builder object.
     */
    public static function init(string $action, string $name): self
    {
        return new self(new NacRule($action, $name));
    }

    /**
     * Sets apply tags field.
     */
    public function applyTags(?array $value): self
    {
        $this->instance->setApplyTags($value);
        return $this;
    }

    /**
     * Sets created time field.
     */
    public function createdTime(?float $value): self
    {
        $this->instance->setCreatedTime($value);
        return $this;
    }

    /**
     * Sets enabled field.
     */
    public function enabled(?bool $value): self
    {
        $this->instance->setEnabled($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets matching field.
     */
    public function matching(?NacRuleMatching $value): self
    {
        $this->instance->setMatching($value);
        return $this;
    }

    /**
     * Sets modified time field.
     */
    public function modifiedTime(?float $value): self
    {
        $this->instance->setModifiedTime($value);
        return $this;
    }

    /**
     * Sets not matching field.
     */
    public function notMatching(?NacRuleMatching $value): self
    {
        $this->instance->setNotMatching($value);
        return $this;
    }

    /**
     * Sets order field.
     */
    public function order(?int $value): self
    {
        $this->instance->setOrder($value);
        return $this;
    }

    /**
     * Sets org id field.
     */
    public function orgId(?string $value): self
    {
        $this->instance->setOrgId($value);
        return $this;
    }

    /**
     * Initializes a new nac rule object.
     */
    public function build(): NacRule
    {
        return CoreHelper::clone($this->instance);
    }
}
