<?php

declare(strict_types=1);

/*
 * MistAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MistAPILib\Models;

use stdClass;

class NacPortalTemplate implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $alignment;

    /**
     * @var string|null
     */
    private $color = '#1074bc';

    /**
     * @var string|null
     */
    private $logo;

    /**
     * @var bool|null
     */
    private $poweredBy = false;

    /**
     * Returns Alignment.
     */
    public function getAlignment(): ?string
    {
        return $this->alignment;
    }

    /**
     * Sets Alignment.
     *
     * @maps alignment
     * @factory \MistAPILib\Models\NacPortalTypeEnum1Enum::checkValue
     */
    public function setAlignment(?string $alignment): void
    {
        $this->alignment = $alignment;
    }

    /**
     * Returns Color.
     */
    public function getColor(): ?string
    {
        return $this->color;
    }

    /**
     * Sets Color.
     *
     * @maps color
     */
    public function setColor(?string $color): void
    {
        $this->color = $color;
    }

    /**
     * Returns Logo.
     * custom logo custom logo with â€œdata:image/png;base64,â€ format. default null, uses Juniper Mist
     * Logo.
     */
    public function getLogo(): ?string
    {
        return $this->logo;
    }

    /**
     * Sets Logo.
     * custom logo custom logo with â€œdata:image/png;base64,â€ format. default null, uses Juniper Mist
     * Logo.
     *
     * @maps logo
     */
    public function setLogo(?string $logo): void
    {
        $this->logo = $logo;
    }

    /**
     * Returns Powered By.
     * whether to hide â€œPowered by Juniper Mistâ€ and email footers
     */
    public function getPoweredBy(): ?bool
    {
        return $this->poweredBy;
    }

    /**
     * Sets Powered By.
     * whether to hide â€œPowered by Juniper Mistâ€ and email footers
     *
     * @maps poweredBy
     */
    public function setPoweredBy(?bool $poweredBy): void
    {
        $this->poweredBy = $poweredBy;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->alignment)) {
            $json['alignment'] = NacPortalTypeEnum1Enum::checkValue($this->alignment);
        }
        if (isset($this->color)) {
            $json['color']     = $this->color;
        }
        if (isset($this->logo)) {
            $json['logo']      = $this->logo;
        }
        if (isset($this->poweredBy)) {
            $json['poweredBy'] = $this->poweredBy;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
