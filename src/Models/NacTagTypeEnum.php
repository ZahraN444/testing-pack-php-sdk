<?php

declare(strict_types=1);

/*
 * MistAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MistAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * enum: `egress_vlan_names`, `gbp_tag`, `match`, `radius_attrs`, `radius_group`, `radius_vendor_attrs`,
 * `session_timeout`, `username_attr`, `vlan`
 */
class NacTagTypeEnum
{
    public const EGRESS_VLAN_NAMES = 'egress_vlan_names';

    public const GBP_TAG = 'gbp_tag';

    public const MATCH = 'match';

    public const RADIUS_ATTRS = 'radius_attrs';

    public const RADIUS_GROUP = 'radius_group';

    public const RADIUS_VENDOR_ATTRS = 'radius_vendor_attrs';

    public const SESSION_TIMEOUT = 'session_timeout';

    public const USERNAME_ATTR = 'username_attr';

    public const VLAN = 'vlan';

    private const _ALL_VALUES = [
        self::EGRESS_VLAN_NAMES,
        self::GBP_TAG,
        self::MATCH,
        self::RADIUS_ATTRS,
        self::RADIUS_GROUP,
        self::RADIUS_VENDOR_ATTRS,
        self::SESSION_TIMEOUT,
        self::USERNAME_ATTR,
        self::VLAN
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for NacTagTypeEnum.");
    }
}
